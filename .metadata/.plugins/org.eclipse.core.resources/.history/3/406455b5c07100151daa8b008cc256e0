package IR_Report2;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Scanner;

public class MainSearch {

//	private static String FILE_NAME = "news2.txt";
	private String text1 = null;
	private String[] text2 = null;
	private String text3 = null;
	private HashSet<String> hashSet;
	private ArrayList<String> arrayList;
	ArrayList<String> deduplication;
	
	private String inputText1 = null;
	private String inputText2 = null;
	
	private ArrayList<ArrayList<String>> inputWordList = new ArrayList<ArrayList<String>>();
	

	private static final String[] END_WORD_VERB = {"까", "고", "요", "도", "어", "며", "라", "듯","지","다","기","면","데","나","야","래","러","진","함","임","게","서","니","오", "여", "군"};
	private static final String[] END_WORD_NOUN = {"에", "의", "며", "어", "은", "는", "가", "를","랑","와", "이", "을", "과" ,"로","들"};

	public static void main(String[] args) {

		MainSearch mainSearch = new MainSearch();
		
		for(int i=0;i<33;i++) {
			mainSearch.readFile("news"+i+".txt");
		}
//		mainSearch.readFile("news0.txt");
		mainSearch.print();
		
		mainSearch.Scan();

	}
		
	private void Scan() {
		System.out.print("첫번 째 단어 입력 : ");
		Scanner sc = new Scanner(System.in);
		inputText1 = sc.nextLine();
		System.out.print("두번 째 단어 입력 : ");
		inputText2 = sc.nextLine();
	}
	
	private String korExtenction(String str) {
		return str.replaceAll("[^\uAC00-\uD7AF\u1100-\u11FF\u3130-\u318F]","");
	}

	private String endWordExtenction(String str) {

		String match = str.substring(str.length()-1,str.length());
		for(int i=0;i<END_WORD_NOUN.length;i++) {
			if(match.equals(END_WORD_NOUN[i])) {
				str = returnText(str);
			}
		}
		for(int i=0;i<END_WORD_VERB.length;i++) {
			if(match.equals(END_WORD_VERB[i])) {
				str = "";
			}
		}
		if(str.length()==1) {
			str = "";
		}
		return str;
	}

	private String returnText(String str) {
		return str = str.substring(0,str.length()-1);
	}

	private void readFile(String fileName) {
		arrayList = new ArrayList<>();
		try {
			BufferedReader in = new BufferedReader(new FileReader(fileName));
			while((text1 = in.readLine())!=null) {
				text2 = spilitText(text1);
				addList(text2);				
			}

			makeDeduplication(arrayList);
		} catch(IOException e) {
			e.printStackTrace();
		}
	}

	private String[] spilitText(String text) {
		return text.split(" ");
	}

	private void addList(String[] text) {

		for(int i=0;i<text.length;i++) {
			text3 = korExtenction(text[i]);
			if(text3.length()!=0) {
				text3 = endWordExtenction(text3);
			}
			arrayList.add(text3);
		}

	}

	private void makeDeduplication(ArrayList<String> arr) {
		hashSet = new HashSet<>(arr);
		makeDeduplicationArrayList(hashSet);
	}

	private void makeDeduplicationArrayList(HashSet<String> hashSet) {
		deduplication = new ArrayList<>(hashSet);
		inputWordList.add(deduplication);
	}

	private void print() {
		for(int i=0;i<inputWordList.size();i++) {
			System.out.print(inputWordList.get(0).get(i) + "   ");
		}

	}
	
}
