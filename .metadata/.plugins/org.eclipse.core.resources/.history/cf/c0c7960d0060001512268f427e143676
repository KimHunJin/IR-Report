import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;

public class IR_Main {

	
	static String[] text = {"go","can","do","man","clock","ask"};
	static String[] multi = {"s", "es"};
	static String[] past = {"d", "ed"};
	static String[] now = {"ing"};
		
	static String[][] matching = {text, multi, past, now};
	
	static String Input = null;
	static boolean success = false;
	static 	Set<Integer> rootSet = new HashSet<Integer>();
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
//		new FileRead(rootSet);
		FileRead();
		boolean mat = rootSet.contains("fdsaf".hashCode());
		System.out.println(mat);
		
	/*	while(!success) {			
			Input = Scan();  // 텍스트 입력
			// 1. high case - sentence			
			success = find(Input);
			if(success == true) {
				// return sentence
				System.out.println(Input);
			} else {
				// 2. low case - past, now, multi, ...
				lowCase(Input);
			}			
		}*/
	}
	
	static void FileRead() {
						
			String FileName = "dictionary.txt";
			try {
				BufferedReader in = new BufferedReader(new FileReader(FileName));
				String s;

				while ((s = in.readLine()) != null) {
					rootSet.add(s.hashCode());
				}
				
				in.close();
			   
			} catch (IOException e) {
				System.err.println(e); // 에러가 있다면 메시지 출력
				System.exit(1);
			}
	}
	
	private static String lowCase(String text) {
		for(int i=0;i<matching.length;i++) {
			for(int j=0;j<matching[i].length;i++) {
				success = find(text, matching[i][j]);
				if(success == true) {
					// return sentence
					return text;
				}
			}
		}		
		return null;
	}

	private static String Scan() {
		// TODO Auto-generated method stub
		String inputText;
		System.out.print("input : ");
		Scanner sc = new Scanner(System.in);
		inputText = sc.nextLine();
		return inputText;
	}
	
	private static boolean find(String text) {
		// find sentence for actually		
		return false;
	}
	
	private static boolean find(String text, String matchText) {
		// find sentence + matching
		return false;
	}

}
